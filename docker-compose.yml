version: '3.8'
volumes:
      allstar_data:
        external: true
services:
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_ACCOUNTS_HOST: http://localhost:8030
      REACT_APP_EVENTS_HOST: http://localhost:8080
      GEOCODING_API_KEY: ${GEOCODING_API_KEY}
  database:
    image: postgres:14-bullseye
    volumes:
            - allstar_data:/var/lib/postgresql/data
            - ./database/setup:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=events,parks,accounts
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432
  events-api:
    build:
      context: ./events/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8080:8000"
    volumes:
      - ./events/api:/app
    depends_on:
      - database
    environment:
      DEBUG: True
      DATABASE_URL: postgres://events:password@database:5432/events
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 1adfe79e8c8dd6f17a656faffa0e39baff1f56f7b2c79577d0e1c7cc23076e4d
  parks-api:
    build:
      context: ./parks/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8090:8000"
    volumes:
      - ./parks/api:/app
    depends_on:
      - database
    environment:
      DEBUG: True
      DATABASE_URL: postgres://parks:password@database:5432/parks
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  accounts-api:
    build:
      context: ./accounts/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8030:8000"
    volumes:
      - ./accounts/api:/app
    depends_on:
      - database
    environment:
      DEBUG: True
      DATABASE_URL: postgres://parks:password@database:5432/accounts
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 1adfe79e8c8dd6f17a656faffa0e39baff1f56f7b2c79577d0e1c7cc23076e4d
      GEOCODING_API_KEY: ${GEOCODING_API_KEY}
      SEAT_GEEK_CLIENT_ID: ${SEAT_GEEK_CLIENT_ID}
      SEAT_GEEK_SECRET: ${SEAT_GEEK_SECRET}
      NATIONAL_PARKS_API_KEY: ${NATIONAL_PARKS_API_KEY}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}
      CURRENT_OPEN_WEATHER_API_KEY: ${CURRENT_OPEN_WEATHER_API_KEY}
     
